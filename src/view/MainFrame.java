/**
 *Name : Tran Van Khoi
 *MSSV : HE130007
 *Email : khoitvhe130007@fpt.edu.vn
 *Lecturer : DuongTB
 */
package view;

import controller.MainController;

import java.io.File;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author khoitvhe130007@fpt.edu.vn
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    MainController mainControler;

    public MainFrame() {
        initComponents();
        mainControler = new MainController();
    }

    /* reset labels */
    public void resetLabels() {
        txtAreaShowContent.setText("");
        lbFileName.setText("File name: ");
        lbFileSize.setText("File size: ");
    }

    /* show message dialog */
    public void showMessageDialog(String message) {
        JOptionPane.showMessageDialog(this, message);
        resetLabels();
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    public void handleSelect() {
        try {
            String selectedFile = (String) listFile.getSelectedValue();
            String filePath = txtPath.getText() + "/" + selectedFile;
            File file = new File(filePath);
            if (selectedFile.endsWith(".txt")) {
                btnUpdate.setEnabled(true);
                btnDelete.setEnabled(true);
                lbFileName.setText("File Name : " + selectedFile);
                lbFileSize.setText("File Size : " + file.length());
                txtAreaShowContent.setText(mainControler.getFileContent(file, filePath));
            } else {
                showMessageDialog("Selected file is not a text file , content cannot be shown");
            }
        } catch (Exception e) {
            showMessageDialog("Error : " + e.toString());
        }
    }

    public void handleUpdate() {
        String selectedFile = (String) listFile.getSelectedValue();
        String filePath = txtPath.getText() + "/" + selectedFile;
        File file = new File(filePath);
        try {
            mainControler.updateFileContent(file, txtAreaShowContent.getText());
            lbFileSize.setText("File Size : " + file.length());
            JOptionPane.showMessageDialog(this, "Update successfully!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Update failed!");
        }
    }

    public void handleDelete() {
        try {
            String selectedFile = (String) listFile.getSelectedValue();
            String filePath = txtPath.getText() + "/" + selectedFile;
            File file = new File(filePath);

            /* delete selected file in listFile*/
            int row = listFile.getSelectedIndex();
            DefaultListModel model = (DefaultListModel) listFile.getModel();
            model.remove(row);

            /* delete selected file in folder*/
            mainControler.deleteFile(file);
            resetLabels();
            showMessageDialog("Delete successfully");
        } catch (Exception e) {
            showMessageDialog("Delete failed!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPath = new javax.swing.JTextField();
        btnListFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaShowContent = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listFile = new javax.swing.JList<>();
        lbFileName = new javax.swing.JLabel();
        lbFileSize = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnListFile.setText("List file");
        btnListFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListFileActionPerformed(evt);
            }
        });

        txtAreaShowContent.setColumns(20);
        txtAreaShowContent.setRows(5);
        jScrollPane1.setViewportView(txtAreaShowContent);

        listFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFileMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listFile);

        lbFileName.setText("File name: ");

        lbFileSize.setText("File size:");

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtPath)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnListFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete)
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbFileSize)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbFileName)
                            .addComponent(lbFileSize)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnListFile)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListFileActionPerformed
        resetLabels();
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        File file = new File(txtPath.getText());
        if (file.isDirectory()) {
            listFile.setModel(mainControler.getListFile(txtPath.getText()));
        } else {
            JOptionPane.showMessageDialog(this, "This path is invalid! Please try again!");
        }
    }//GEN-LAST:event_btnListFileActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        handleUpdate();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void listFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFileMouseClicked
        handleSelect();
    }//GEN-LAST:event_listFileMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        handleDelete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnListFile;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbFileName;
    private javax.swing.JLabel lbFileSize;
    private javax.swing.JList<String> listFile;
    private javax.swing.JTextArea txtAreaShowContent;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables
}
